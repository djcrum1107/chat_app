{"version":3,"sources":["App.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","auth","getAuth","firestore","getFirestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","q","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","console","log","uid","photoURL","addDoc","text","createdAt","Timestamp","now","current","scrollIntoView","behavior","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","type","props","messageClass","className","src","alt","App","useAuthState","user","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8RAuBMA,EAAWC,YAVM,CACrBC,OAAQ,0CACRC,WAAY,qCACZC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,8CAKHC,EAAOC,YAAQT,GACfU,EAAYC,YAAaX,GAmB/B,SAASY,IAMP,OACE,wBAAQC,QANe,WACvB,IAAMC,EAAW,IAAIC,IACrBC,YAAgBR,EAAMM,IAItB,iCAIJ,SAASG,IACP,OAAOT,EAAKU,aACV,wBAAQL,QAAS,kBAAML,EAAKW,WAA5B,sBAIJ,SAASC,IACP,IAAMC,EAAQC,mBACRC,EAAcC,YAAWd,EAAW,YACpCe,EAAIC,YAAMH,EAAaI,YAAQ,aAAcC,YAAM,KACzD,EAAmBC,YAAkBJ,EAAG,CAACK,QAAS,OAA3CC,EAAP,oBAEA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAEMC,EAAW,uCAAG,WAAMC,GAAN,mBAAAC,EAAA,6DAClBD,EAAEE,iBACFC,QAAQC,IAAI,gBAFM,EAGQhC,EAAKU,YAAvBuB,EAHU,EAGVA,IAAKC,EAHK,EAGLA,SAHK,SAKZC,YAAOpB,EAAa,CACxBqB,KAAMX,EACNY,UAAWC,IAAUC,MACrBN,MACAC,aATgB,OAYlBR,EAAa,IACbb,EAAM2B,QAAQC,eAAe,CAACC,SAAU,WAbtB,2CAAH,sDAgBjB,OACE,qCACE,iCACGnB,GAAYA,EAASoB,KAAI,SAAAC,GAAG,OAAI,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OACvD,qBAAKC,IAAKnC,OAIZ,uBAAMoC,SAAUtB,EAAhB,UACE,uBAAOuB,MAAOzB,EAAW0B,SAAU,SAACvB,GAAD,OAAOF,EAAaE,EAAEwB,OAAOF,UAChE,wBAAQG,KAAK,SAAb,wBAMR,SAASR,EAAYS,GACnB,MAA8BA,EAAMR,QAA7BV,EAAP,EAAOA,KAAMH,EAAb,EAAaA,IAAKC,EAAlB,EAAkBA,SAEZqB,EAAetB,IAAQjC,EAAKU,YAAYuB,IAAM,OAAS,WAE7D,OACE,sBAAKuB,UAAS,kBAAaD,GAA3B,UACE,qBAAKE,IAAKvB,EAAUwB,IAAI,SACxB,4BAAItB,OAKKuB,MAvFf,WAEE,MAAeC,YAAa5D,GAArB6D,EAAP,oBAEA,OACE,sBAAKL,UAAU,MAAf,UACE,mCACE,2CACA,cAAC/C,EAAD,OAEF,kCACGoD,EAAO,cAACjD,EAAD,IAAe,cAACR,EAAD,UCjC/B0D,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.16c1ad10.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react';\nimport './App.css';\n\n// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider, signInWithPopup } from 'firebase/auth';\nimport { getFirestore, collection, query, orderBy, limit, addDoc, Timestamp } from 'firebase/firestore';\nimport { useAuthState } from 'react-firebase-hooks/auth';\nimport { useCollectionData } from 'react-firebase-hooks/firestore'\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyD7lsZCtWisXO6dnKF0CWDZhtawNt2Meas\",\n  authDomain: \"backend-test-e3b31.firebaseapp.com\",\n  projectId: \"backend-test-e3b31\",\n  storageBucket: \"backend-test-e3b31.appspot.com\",\n  messagingSenderId: \"996665900980\",\n  appId: \"1:996665900980:web:63c63c3789f4c85aa3fce1\"\n};\n\n// Initialize Firebase\nconst firebase = initializeApp(firebaseConfig);\nconst auth = getAuth(firebase);\nconst firestore = getFirestore(firebase);\n\nfunction App() {\n\n  const [user] = useAuthState(auth);\n\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Rob Sucks</h1>\n        <SignOut />\n      </header>\n      <section>\n        {user ? <ChatRoom /> : <SignIn />}\n      </section>\n    </div>\n  );\n}\n\nfunction SignIn() {\n  const signInWithGoogle = () => {\n    const provider = new GoogleAuthProvider();\n    signInWithPopup(auth, provider);\n  }\n\n  return(\n    <button onClick={signInWithGoogle}>Sign in with Google</button>\n  )\n}\n\nfunction SignOut() {\n  return auth.currentUser && (\n    <button onClick={() => auth.signOut()}>Sign Out</button>\n  )\n}\n\nfunction ChatRoom() {\n  const dummy = useRef();\n  const messagesRef = collection(firestore, 'messages');\n  const q = query(messagesRef, orderBy('createdAt'), limit(25))\n  const [messages] = useCollectionData(q, {idField: 'id'});\n\n  const [formValue, setFormValue] = useState('');\n\n  const sendMessage = async(e) => {\n    e.preventDefault();\n    console.log(\"message sent\");\n    const { uid, photoURL } = auth.currentUser;\n\n    await addDoc(messagesRef, {\n      text: formValue,\n      createdAt: Timestamp.now(),\n      uid,\n      photoURL\n    });\n\n    setFormValue('');\n    dummy.current.scrollIntoView({behavior: 'smooth'});\n  }\n\n  return (\n    <>\n      <main>\n        {messages && messages.map(msg => <ChatMessage key={msg.id} message={msg} />)}\n        <div ref={dummy}></div>\n      </main>\n\n\n      <form onSubmit={sendMessage}>\n        <input value={formValue} onChange={(e) => setFormValue(e.target.value)}/>\n        <button type='submit'>Send</button>\n      </form>\n    </>\n  )\n}\n\nfunction ChatMessage(props) {\n  const {text, uid, photoURL} = props.message;\n\n  const messageClass = uid === auth.currentUser.uid ? 'sent' : 'received';\n\n  return (\n    <div className={`message ${messageClass}`}>\n      <img src={photoURL} alt=\"user\"/>\n      <p>{text}</p>\n    </div>\n  )\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}